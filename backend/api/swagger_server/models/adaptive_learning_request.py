# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.adaptive_learning_request_feedback_loop_configuration import AdaptiveLearningRequestFeedbackLoopConfiguration  # noqa: F401,E501
from swagger_server.models.adaptive_learning_request_training_parameters import AdaptiveLearningRequestTrainingParameters  # noqa: F401,E501
from swagger_server import util


class AdaptiveLearningRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, model_type: str=None, training_parameters: AdaptiveLearningRequestTrainingParameters=None, feedback_loop_configuration: AdaptiveLearningRequestFeedbackLoopConfiguration=None):  # noqa: E501
        """AdaptiveLearningRequest - a model defined in Swagger

        :param model_type: The model_type of this AdaptiveLearningRequest.  # noqa: E501
        :type model_type: str
        :param training_parameters: The training_parameters of this AdaptiveLearningRequest.  # noqa: E501
        :type training_parameters: AdaptiveLearningRequestTrainingParameters
        :param feedback_loop_configuration: The feedback_loop_configuration of this AdaptiveLearningRequest.  # noqa: E501
        :type feedback_loop_configuration: AdaptiveLearningRequestFeedbackLoopConfiguration
        """
        self.swagger_types = {
            'model_type': str,
            'training_parameters': AdaptiveLearningRequestTrainingParameters,
            'feedback_loop_configuration': AdaptiveLearningRequestFeedbackLoopConfiguration
        }

        self.attribute_map = {
            'model_type': 'model_type',
            'training_parameters': 'training_parameters',
            'feedback_loop_configuration': 'feedback_loop_configuration'
        }
        self._model_type = model_type
        self._training_parameters = training_parameters
        self._feedback_loop_configuration = feedback_loop_configuration

    @classmethod
    def from_dict(cls, dikt) -> 'AdaptiveLearningRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AdaptiveLearningRequest of this AdaptiveLearningRequest.  # noqa: E501
        :rtype: AdaptiveLearningRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_type(self) -> str:
        """Gets the model_type of this AdaptiveLearningRequest.


        :return: The model_type of this AdaptiveLearningRequest.
        :rtype: str
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type: str):
        """Sets the model_type of this AdaptiveLearningRequest.


        :param model_type: The model_type of this AdaptiveLearningRequest.
        :type model_type: str
        """
        allowed_values = ["linear_regression", "random_forest", "lstm", "xgboost", "prophet", "autoencoder"]  # noqa: E501
        if model_type not in allowed_values:
            raise ValueError(
                "Invalid value for `model_type` ({0}), must be one of {1}"
                .format(model_type, allowed_values)
            )

        self._model_type = model_type

    @property
    def training_parameters(self) -> AdaptiveLearningRequestTrainingParameters:
        """Gets the training_parameters of this AdaptiveLearningRequest.


        :return: The training_parameters of this AdaptiveLearningRequest.
        :rtype: AdaptiveLearningRequestTrainingParameters
        """
        return self._training_parameters

    @training_parameters.setter
    def training_parameters(self, training_parameters: AdaptiveLearningRequestTrainingParameters):
        """Sets the training_parameters of this AdaptiveLearningRequest.


        :param training_parameters: The training_parameters of this AdaptiveLearningRequest.
        :type training_parameters: AdaptiveLearningRequestTrainingParameters
        """

        self._training_parameters = training_parameters

    @property
    def feedback_loop_configuration(self) -> AdaptiveLearningRequestFeedbackLoopConfiguration:
        """Gets the feedback_loop_configuration of this AdaptiveLearningRequest.


        :return: The feedback_loop_configuration of this AdaptiveLearningRequest.
        :rtype: AdaptiveLearningRequestFeedbackLoopConfiguration
        """
        return self._feedback_loop_configuration

    @feedback_loop_configuration.setter
    def feedback_loop_configuration(self, feedback_loop_configuration: AdaptiveLearningRequestFeedbackLoopConfiguration):
        """Sets the feedback_loop_configuration of this AdaptiveLearningRequest.


        :param feedback_loop_configuration: The feedback_loop_configuration of this AdaptiveLearningRequest.
        :type feedback_loop_configuration: AdaptiveLearningRequestFeedbackLoopConfiguration
        """

        self._feedback_loop_configuration = feedback_loop_configuration
