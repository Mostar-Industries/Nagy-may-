# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.habitat_analysis_request_geographic_coordinates import HabitatAnalysisRequestGeographicCoordinates  # noqa: F401,E501
from swagger_server.models.habitat_analysis_response_future_projections import HabitatAnalysisResponseFutureProjections  # noqa: F401,E501
from swagger_server.models.habitat_analysis_response_risk_factors import HabitatAnalysisResponseRiskFactors  # noqa: F401,E501
from swagger_server.models.habitat_analysis_response_temporal_pattern import HabitatAnalysisResponseTemporalPattern  # noqa: F401,E501
from swagger_server import util


class HabitatAnalysisResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, location: HabitatAnalysisRequestGeographicCoordinates=None, suitability_score: float=None, analysis_timestamp: datetime=None, temporal_pattern: HabitatAnalysisResponseTemporalPattern=None, risk_factors: List[HabitatAnalysisResponseRiskFactors]=None, future_projections: List[HabitatAnalysisResponseFutureProjections]=None):  # noqa: E501
        """HabitatAnalysisResponse - a model defined in Swagger

        :param id: The id of this HabitatAnalysisResponse.  # noqa: E501
        :type id: int
        :param location: The location of this HabitatAnalysisResponse.  # noqa: E501
        :type location: HabitatAnalysisRequestGeographicCoordinates
        :param suitability_score: The suitability_score of this HabitatAnalysisResponse.  # noqa: E501
        :type suitability_score: float
        :param analysis_timestamp: The analysis_timestamp of this HabitatAnalysisResponse.  # noqa: E501
        :type analysis_timestamp: datetime
        :param temporal_pattern: The temporal_pattern of this HabitatAnalysisResponse.  # noqa: E501
        :type temporal_pattern: HabitatAnalysisResponseTemporalPattern
        :param risk_factors: The risk_factors of this HabitatAnalysisResponse.  # noqa: E501
        :type risk_factors: List[HabitatAnalysisResponseRiskFactors]
        :param future_projections: The future_projections of this HabitatAnalysisResponse.  # noqa: E501
        :type future_projections: List[HabitatAnalysisResponseFutureProjections]
        """
        self.swagger_types = {
            'id': int,
            'location': HabitatAnalysisRequestGeographicCoordinates,
            'suitability_score': float,
            'analysis_timestamp': datetime,
            'temporal_pattern': HabitatAnalysisResponseTemporalPattern,
            'risk_factors': List[HabitatAnalysisResponseRiskFactors],
            'future_projections': List[HabitatAnalysisResponseFutureProjections]
        }

        self.attribute_map = {
            'id': 'id',
            'location': 'location',
            'suitability_score': 'suitability_score',
            'analysis_timestamp': 'analysis_timestamp',
            'temporal_pattern': 'temporal_pattern',
            'risk_factors': 'risk_factors',
            'future_projections': 'future_projections'
        }
        self._id = id
        self._location = location
        self._suitability_score = suitability_score
        self._analysis_timestamp = analysis_timestamp
        self._temporal_pattern = temporal_pattern
        self._risk_factors = risk_factors
        self._future_projections = future_projections

    @classmethod
    def from_dict(cls, dikt) -> 'HabitatAnalysisResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HabitatAnalysisResponse of this HabitatAnalysisResponse.  # noqa: E501
        :rtype: HabitatAnalysisResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this HabitatAnalysisResponse.


        :return: The id of this HabitatAnalysisResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this HabitatAnalysisResponse.


        :param id: The id of this HabitatAnalysisResponse.
        :type id: int
        """

        self._id = id

    @property
    def location(self) -> HabitatAnalysisRequestGeographicCoordinates:
        """Gets the location of this HabitatAnalysisResponse.


        :return: The location of this HabitatAnalysisResponse.
        :rtype: HabitatAnalysisRequestGeographicCoordinates
        """
        return self._location

    @location.setter
    def location(self, location: HabitatAnalysisRequestGeographicCoordinates):
        """Sets the location of this HabitatAnalysisResponse.


        :param location: The location of this HabitatAnalysisResponse.
        :type location: HabitatAnalysisRequestGeographicCoordinates
        """

        self._location = location

    @property
    def suitability_score(self) -> float:
        """Gets the suitability_score of this HabitatAnalysisResponse.


        :return: The suitability_score of this HabitatAnalysisResponse.
        :rtype: float
        """
        return self._suitability_score

    @suitability_score.setter
    def suitability_score(self, suitability_score: float):
        """Sets the suitability_score of this HabitatAnalysisResponse.


        :param suitability_score: The suitability_score of this HabitatAnalysisResponse.
        :type suitability_score: float
        """

        self._suitability_score = suitability_score

    @property
    def analysis_timestamp(self) -> datetime:
        """Gets the analysis_timestamp of this HabitatAnalysisResponse.

        Precise timestamp when the analysis was performed  # noqa: E501

        :return: The analysis_timestamp of this HabitatAnalysisResponse.
        :rtype: datetime
        """
        return self._analysis_timestamp

    @analysis_timestamp.setter
    def analysis_timestamp(self, analysis_timestamp: datetime):
        """Sets the analysis_timestamp of this HabitatAnalysisResponse.

        Precise timestamp when the analysis was performed  # noqa: E501

        :param analysis_timestamp: The analysis_timestamp of this HabitatAnalysisResponse.
        :type analysis_timestamp: datetime
        """

        self._analysis_timestamp = analysis_timestamp

    @property
    def temporal_pattern(self) -> HabitatAnalysisResponseTemporalPattern:
        """Gets the temporal_pattern of this HabitatAnalysisResponse.


        :return: The temporal_pattern of this HabitatAnalysisResponse.
        :rtype: HabitatAnalysisResponseTemporalPattern
        """
        return self._temporal_pattern

    @temporal_pattern.setter
    def temporal_pattern(self, temporal_pattern: HabitatAnalysisResponseTemporalPattern):
        """Sets the temporal_pattern of this HabitatAnalysisResponse.


        :param temporal_pattern: The temporal_pattern of this HabitatAnalysisResponse.
        :type temporal_pattern: HabitatAnalysisResponseTemporalPattern
        """

        self._temporal_pattern = temporal_pattern

    @property
    def risk_factors(self) -> List[HabitatAnalysisResponseRiskFactors]:
        """Gets the risk_factors of this HabitatAnalysisResponse.


        :return: The risk_factors of this HabitatAnalysisResponse.
        :rtype: List[HabitatAnalysisResponseRiskFactors]
        """
        return self._risk_factors

    @risk_factors.setter
    def risk_factors(self, risk_factors: List[HabitatAnalysisResponseRiskFactors]):
        """Sets the risk_factors of this HabitatAnalysisResponse.


        :param risk_factors: The risk_factors of this HabitatAnalysisResponse.
        :type risk_factors: List[HabitatAnalysisResponseRiskFactors]
        """

        self._risk_factors = risk_factors

    @property
    def future_projections(self) -> List[HabitatAnalysisResponseFutureProjections]:
        """Gets the future_projections of this HabitatAnalysisResponse.


        :return: The future_projections of this HabitatAnalysisResponse.
        :rtype: List[HabitatAnalysisResponseFutureProjections]
        """
        return self._future_projections

    @future_projections.setter
    def future_projections(self, future_projections: List[HabitatAnalysisResponseFutureProjections]):
        """Sets the future_projections of this HabitatAnalysisResponse.


        :param future_projections: The future_projections of this HabitatAnalysisResponse.
        :type future_projections: List[HabitatAnalysisResponseFutureProjections]
        """

        self._future_projections = future_projections
