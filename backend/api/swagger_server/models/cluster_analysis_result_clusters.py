# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.cluster_analysis_result_risk_assessment import ClusterAnalysisResultRiskAssessment  # noqa: F401,E501
from swagger_server.models.geo_coordinate import GeoCoordinate  # noqa: F401,E501
from swagger_server import util


class ClusterAnalysisResultClusters(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cluster_id: int=None, center: GeoCoordinate=None, radius: float=None, member_count: int=None, density: float=None, risk_assessment: ClusterAnalysisResultRiskAssessment=None):  # noqa: E501
        """ClusterAnalysisResultClusters - a model defined in Swagger

        :param cluster_id: The cluster_id of this ClusterAnalysisResultClusters.  # noqa: E501
        :type cluster_id: int
        :param center: The center of this ClusterAnalysisResultClusters.  # noqa: E501
        :type center: GeoCoordinate
        :param radius: The radius of this ClusterAnalysisResultClusters.  # noqa: E501
        :type radius: float
        :param member_count: The member_count of this ClusterAnalysisResultClusters.  # noqa: E501
        :type member_count: int
        :param density: The density of this ClusterAnalysisResultClusters.  # noqa: E501
        :type density: float
        :param risk_assessment: The risk_assessment of this ClusterAnalysisResultClusters.  # noqa: E501
        :type risk_assessment: ClusterAnalysisResultRiskAssessment
        """
        self.swagger_types = {
            'cluster_id': int,
            'center': GeoCoordinate,
            'radius': float,
            'member_count': int,
            'density': float,
            'risk_assessment': ClusterAnalysisResultRiskAssessment
        }

        self.attribute_map = {
            'cluster_id': 'cluster_id',
            'center': 'center',
            'radius': 'radius',
            'member_count': 'member_count',
            'density': 'density',
            'risk_assessment': 'risk_assessment'
        }
        self._cluster_id = cluster_id
        self._center = center
        self._radius = radius
        self._member_count = member_count
        self._density = density
        self._risk_assessment = risk_assessment

    @classmethod
    def from_dict(cls, dikt) -> 'ClusterAnalysisResultClusters':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClusterAnalysisResult_clusters of this ClusterAnalysisResultClusters.  # noqa: E501
        :rtype: ClusterAnalysisResultClusters
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_id(self) -> int:
        """Gets the cluster_id of this ClusterAnalysisResultClusters.


        :return: The cluster_id of this ClusterAnalysisResultClusters.
        :rtype: int
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id: int):
        """Sets the cluster_id of this ClusterAnalysisResultClusters.


        :param cluster_id: The cluster_id of this ClusterAnalysisResultClusters.
        :type cluster_id: int
        """

        self._cluster_id = cluster_id

    @property
    def center(self) -> GeoCoordinate:
        """Gets the center of this ClusterAnalysisResultClusters.


        :return: The center of this ClusterAnalysisResultClusters.
        :rtype: GeoCoordinate
        """
        return self._center

    @center.setter
    def center(self, center: GeoCoordinate):
        """Sets the center of this ClusterAnalysisResultClusters.


        :param center: The center of this ClusterAnalysisResultClusters.
        :type center: GeoCoordinate
        """

        self._center = center

    @property
    def radius(self) -> float:
        """Gets the radius of this ClusterAnalysisResultClusters.


        :return: The radius of this ClusterAnalysisResultClusters.
        :rtype: float
        """
        return self._radius

    @radius.setter
    def radius(self, radius: float):
        """Sets the radius of this ClusterAnalysisResultClusters.


        :param radius: The radius of this ClusterAnalysisResultClusters.
        :type radius: float
        """

        self._radius = radius

    @property
    def member_count(self) -> int:
        """Gets the member_count of this ClusterAnalysisResultClusters.


        :return: The member_count of this ClusterAnalysisResultClusters.
        :rtype: int
        """
        return self._member_count

    @member_count.setter
    def member_count(self, member_count: int):
        """Sets the member_count of this ClusterAnalysisResultClusters.


        :param member_count: The member_count of this ClusterAnalysisResultClusters.
        :type member_count: int
        """

        self._member_count = member_count

    @property
    def density(self) -> float:
        """Gets the density of this ClusterAnalysisResultClusters.


        :return: The density of this ClusterAnalysisResultClusters.
        :rtype: float
        """
        return self._density

    @density.setter
    def density(self, density: float):
        """Sets the density of this ClusterAnalysisResultClusters.


        :param density: The density of this ClusterAnalysisResultClusters.
        :type density: float
        """

        self._density = density

    @property
    def risk_assessment(self) -> ClusterAnalysisResultRiskAssessment:
        """Gets the risk_assessment of this ClusterAnalysisResultClusters.


        :return: The risk_assessment of this ClusterAnalysisResultClusters.
        :rtype: ClusterAnalysisResultRiskAssessment
        """
        return self._risk_assessment

    @risk_assessment.setter
    def risk_assessment(self, risk_assessment: ClusterAnalysisResultRiskAssessment):
        """Sets the risk_assessment of this ClusterAnalysisResultClusters.


        :param risk_assessment: The risk_assessment of this ClusterAnalysisResultClusters.
        :type risk_assessment: ClusterAnalysisResultRiskAssessment
        """

        self._risk_assessment = risk_assessment
