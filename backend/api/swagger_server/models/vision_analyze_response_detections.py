# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class VisionAnalyzeResponseDetections(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, bounding_box: object=None, confidence: float=None, classification: str=None):  # noqa: E501
        """VisionAnalyzeResponseDetections - a model defined in Swagger

        :param bounding_box: The bounding_box of this VisionAnalyzeResponseDetections.  # noqa: E501
        :type bounding_box: object
        :param confidence: The confidence of this VisionAnalyzeResponseDetections.  # noqa: E501
        :type confidence: float
        :param classification: The classification of this VisionAnalyzeResponseDetections.  # noqa: E501
        :type classification: str
        """
        self.swagger_types = {
            'bounding_box': object,
            'confidence': float,
            'classification': str
        }

        self.attribute_map = {
            'bounding_box': 'bounding_box',
            'confidence': 'confidence',
            'classification': 'classification'
        }
        self._bounding_box = bounding_box
        self._confidence = confidence
        self._classification = classification

    @classmethod
    def from_dict(cls, dikt) -> 'VisionAnalyzeResponseDetections':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VisionAnalyzeResponse_detections of this VisionAnalyzeResponseDetections.  # noqa: E501
        :rtype: VisionAnalyzeResponseDetections
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounding_box(self) -> object:
        """Gets the bounding_box of this VisionAnalyzeResponseDetections.


        :return: The bounding_box of this VisionAnalyzeResponseDetections.
        :rtype: object
        """
        return self._bounding_box

    @bounding_box.setter
    def bounding_box(self, bounding_box: object):
        """Sets the bounding_box of this VisionAnalyzeResponseDetections.


        :param bounding_box: The bounding_box of this VisionAnalyzeResponseDetections.
        :type bounding_box: object
        """

        self._bounding_box = bounding_box

    @property
    def confidence(self) -> float:
        """Gets the confidence of this VisionAnalyzeResponseDetections.


        :return: The confidence of this VisionAnalyzeResponseDetections.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence: float):
        """Sets the confidence of this VisionAnalyzeResponseDetections.


        :param confidence: The confidence of this VisionAnalyzeResponseDetections.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def classification(self) -> str:
        """Gets the classification of this VisionAnalyzeResponseDetections.


        :return: The classification of this VisionAnalyzeResponseDetections.
        :rtype: str
        """
        return self._classification

    @classification.setter
    def classification(self, classification: str):
        """Sets the classification of this VisionAnalyzeResponseDetections.


        :param classification: The classification of this VisionAnalyzeResponseDetections.
        :type classification: str
        """

        self._classification = classification
