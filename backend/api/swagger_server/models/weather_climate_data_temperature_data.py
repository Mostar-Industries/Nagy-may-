# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class WeatherClimateDataTemperatureData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, timestamp: datetime=None, temperature_c: float=None, humidity_percent: float=None):  # noqa: E501
        """WeatherClimateDataTemperatureData - a model defined in Swagger

        :param timestamp: The timestamp of this WeatherClimateDataTemperatureData.  # noqa: E501
        :type timestamp: datetime
        :param temperature_c: The temperature_c of this WeatherClimateDataTemperatureData.  # noqa: E501
        :type temperature_c: float
        :param humidity_percent: The humidity_percent of this WeatherClimateDataTemperatureData.  # noqa: E501
        :type humidity_percent: float
        """
        self.swagger_types = {
            'timestamp': datetime,
            'temperature_c': float,
            'humidity_percent': float
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'temperature_c': 'temperature_c',
            'humidity_percent': 'humidity_percent'
        }
        self._timestamp = timestamp
        self._temperature_c = temperature_c
        self._humidity_percent = humidity_percent

    @classmethod
    def from_dict(cls, dikt) -> 'WeatherClimateDataTemperatureData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WeatherClimateData_temperature_data of this WeatherClimateDataTemperatureData.  # noqa: E501
        :rtype: WeatherClimateDataTemperatureData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this WeatherClimateDataTemperatureData.


        :return: The timestamp of this WeatherClimateDataTemperatureData.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this WeatherClimateDataTemperatureData.


        :param timestamp: The timestamp of this WeatherClimateDataTemperatureData.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def temperature_c(self) -> float:
        """Gets the temperature_c of this WeatherClimateDataTemperatureData.


        :return: The temperature_c of this WeatherClimateDataTemperatureData.
        :rtype: float
        """
        return self._temperature_c

    @temperature_c.setter
    def temperature_c(self, temperature_c: float):
        """Sets the temperature_c of this WeatherClimateDataTemperatureData.


        :param temperature_c: The temperature_c of this WeatherClimateDataTemperatureData.
        :type temperature_c: float
        """

        self._temperature_c = temperature_c

    @property
    def humidity_percent(self) -> float:
        """Gets the humidity_percent of this WeatherClimateDataTemperatureData.


        :return: The humidity_percent of this WeatherClimateDataTemperatureData.
        :rtype: float
        """
        return self._humidity_percent

    @humidity_percent.setter
    def humidity_percent(self, humidity_percent: float):
        """Sets the humidity_percent of this WeatherClimateDataTemperatureData.


        :param humidity_percent: The humidity_percent of this WeatherClimateDataTemperatureData.
        :type humidity_percent: float
        """

        self._humidity_percent = humidity_percent
