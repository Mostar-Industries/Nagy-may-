# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ClusterAnalysisResultRiskAssessment(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, outbreak_probability: float=None, population_growth_rate: float=None):  # noqa: E501
        """ClusterAnalysisResultRiskAssessment - a model defined in Swagger

        :param outbreak_probability: The outbreak_probability of this ClusterAnalysisResultRiskAssessment.  # noqa: E501
        :type outbreak_probability: float
        :param population_growth_rate: The population_growth_rate of this ClusterAnalysisResultRiskAssessment.  # noqa: E501
        :type population_growth_rate: float
        """
        self.swagger_types = {
            'outbreak_probability': float,
            'population_growth_rate': float
        }

        self.attribute_map = {
            'outbreak_probability': 'outbreak_probability',
            'population_growth_rate': 'population_growth_rate'
        }
        self._outbreak_probability = outbreak_probability
        self._population_growth_rate = population_growth_rate

    @classmethod
    def from_dict(cls, dikt) -> 'ClusterAnalysisResultRiskAssessment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClusterAnalysisResult_risk_assessment of this ClusterAnalysisResultRiskAssessment.  # noqa: E501
        :rtype: ClusterAnalysisResultRiskAssessment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def outbreak_probability(self) -> float:
        """Gets the outbreak_probability of this ClusterAnalysisResultRiskAssessment.

        Probability of disease outbreak (0-1)  # noqa: E501

        :return: The outbreak_probability of this ClusterAnalysisResultRiskAssessment.
        :rtype: float
        """
        return self._outbreak_probability

    @outbreak_probability.setter
    def outbreak_probability(self, outbreak_probability: float):
        """Sets the outbreak_probability of this ClusterAnalysisResultRiskAssessment.

        Probability of disease outbreak (0-1)  # noqa: E501

        :param outbreak_probability: The outbreak_probability of this ClusterAnalysisResultRiskAssessment.
        :type outbreak_probability: float
        """

        self._outbreak_probability = outbreak_probability

    @property
    def population_growth_rate(self) -> float:
        """Gets the population_growth_rate of this ClusterAnalysisResultRiskAssessment.

        Estimated weekly growth rate  # noqa: E501

        :return: The population_growth_rate of this ClusterAnalysisResultRiskAssessment.
        :rtype: float
        """
        return self._population_growth_rate

    @population_growth_rate.setter
    def population_growth_rate(self, population_growth_rate: float):
        """Sets the population_growth_rate of this ClusterAnalysisResultRiskAssessment.

        Estimated weekly growth rate  # noqa: E501

        :param population_growth_rate: The population_growth_rate of this ClusterAnalysisResultRiskAssessment.
        :type population_growth_rate: float
        """

        self._population_growth_rate = population_growth_rate
