# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PredictiveModelResponseModelFeedback(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, misclassification_rate: float=None, retrain_triggered: bool=None, feedback_window: str=None):  # noqa: E501
        """PredictiveModelResponseModelFeedback - a model defined in Swagger

        :param misclassification_rate: The misclassification_rate of this PredictiveModelResponseModelFeedback.  # noqa: E501
        :type misclassification_rate: float
        :param retrain_triggered: The retrain_triggered of this PredictiveModelResponseModelFeedback.  # noqa: E501
        :type retrain_triggered: bool
        :param feedback_window: The feedback_window of this PredictiveModelResponseModelFeedback.  # noqa: E501
        :type feedback_window: str
        """
        self.swagger_types = {
            'misclassification_rate': float,
            'retrain_triggered': bool,
            'feedback_window': str
        }

        self.attribute_map = {
            'misclassification_rate': 'misclassification_rate',
            'retrain_triggered': 'retrain_triggered',
            'feedback_window': 'feedback_window'
        }
        self._misclassification_rate = misclassification_rate
        self._retrain_triggered = retrain_triggered
        self._feedback_window = feedback_window

    @classmethod
    def from_dict(cls, dikt) -> 'PredictiveModelResponseModelFeedback':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PredictiveModelResponse_model_feedback of this PredictiveModelResponseModelFeedback.  # noqa: E501
        :rtype: PredictiveModelResponseModelFeedback
        """
        return util.deserialize_model(dikt, cls)

    @property
    def misclassification_rate(self) -> float:
        """Gets the misclassification_rate of this PredictiveModelResponseModelFeedback.


        :return: The misclassification_rate of this PredictiveModelResponseModelFeedback.
        :rtype: float
        """
        return self._misclassification_rate

    @misclassification_rate.setter
    def misclassification_rate(self, misclassification_rate: float):
        """Sets the misclassification_rate of this PredictiveModelResponseModelFeedback.


        :param misclassification_rate: The misclassification_rate of this PredictiveModelResponseModelFeedback.
        :type misclassification_rate: float
        """

        self._misclassification_rate = misclassification_rate

    @property
    def retrain_triggered(self) -> bool:
        """Gets the retrain_triggered of this PredictiveModelResponseModelFeedback.


        :return: The retrain_triggered of this PredictiveModelResponseModelFeedback.
        :rtype: bool
        """
        return self._retrain_triggered

    @retrain_triggered.setter
    def retrain_triggered(self, retrain_triggered: bool):
        """Sets the retrain_triggered of this PredictiveModelResponseModelFeedback.


        :param retrain_triggered: The retrain_triggered of this PredictiveModelResponseModelFeedback.
        :type retrain_triggered: bool
        """

        self._retrain_triggered = retrain_triggered

    @property
    def feedback_window(self) -> str:
        """Gets the feedback_window of this PredictiveModelResponseModelFeedback.


        :return: The feedback_window of this PredictiveModelResponseModelFeedback.
        :rtype: str
        """
        return self._feedback_window

    @feedback_window.setter
    def feedback_window(self, feedback_window: str):
        """Sets the feedback_window of this PredictiveModelResponseModelFeedback.


        :param feedback_window: The feedback_window of this PredictiveModelResponseModelFeedback.
        :type feedback_window: str
        """

        self._feedback_window = feedback_window
