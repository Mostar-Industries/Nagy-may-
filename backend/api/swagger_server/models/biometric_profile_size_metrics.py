# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BiometricProfileSizeMetrics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, length_mm: float=None, weight_g: float=None):  # noqa: E501
        """BiometricProfileSizeMetrics - a model defined in Swagger

        :param length_mm: The length_mm of this BiometricProfileSizeMetrics.  # noqa: E501
        :type length_mm: float
        :param weight_g: The weight_g of this BiometricProfileSizeMetrics.  # noqa: E501
        :type weight_g: float
        """
        self.swagger_types = {
            'length_mm': float,
            'weight_g': float
        }

        self.attribute_map = {
            'length_mm': 'length_mm',
            'weight_g': 'weight_g'
        }
        self._length_mm = length_mm
        self._weight_g = weight_g

    @classmethod
    def from_dict(cls, dikt) -> 'BiometricProfileSizeMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BiometricProfile_size_metrics of this BiometricProfileSizeMetrics.  # noqa: E501
        :rtype: BiometricProfileSizeMetrics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def length_mm(self) -> float:
        """Gets the length_mm of this BiometricProfileSizeMetrics.


        :return: The length_mm of this BiometricProfileSizeMetrics.
        :rtype: float
        """
        return self._length_mm

    @length_mm.setter
    def length_mm(self, length_mm: float):
        """Sets the length_mm of this BiometricProfileSizeMetrics.


        :param length_mm: The length_mm of this BiometricProfileSizeMetrics.
        :type length_mm: float
        """

        self._length_mm = length_mm

    @property
    def weight_g(self) -> float:
        """Gets the weight_g of this BiometricProfileSizeMetrics.

        Estimated weight in grams  # noqa: E501

        :return: The weight_g of this BiometricProfileSizeMetrics.
        :rtype: float
        """
        return self._weight_g

    @weight_g.setter
    def weight_g(self, weight_g: float):
        """Sets the weight_g of this BiometricProfileSizeMetrics.

        Estimated weight in grams  # noqa: E501

        :param weight_g: The weight_g of this BiometricProfileSizeMetrics.
        :type weight_g: float
        """

        self._weight_g = weight_g
