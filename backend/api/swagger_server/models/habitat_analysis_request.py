# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.habitat_analysis_request_analysis_parameters import HabitatAnalysisRequestAnalysisParameters  # noqa: F401,E501
from swagger_server.models.habitat_analysis_request_environmental_data import HabitatAnalysisRequestEnvironmentalData  # noqa: F401,E501
from swagger_server.models.habitat_analysis_request_geographic_coordinates import HabitatAnalysisRequestGeographicCoordinates  # noqa: F401,E501
from swagger_server import util


class HabitatAnalysisRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, satellite_data: str=None, environmental_data: HabitatAnalysisRequestEnvironmentalData=None, geographic_coordinates: HabitatAnalysisRequestGeographicCoordinates=None, analysis_parameters: HabitatAnalysisRequestAnalysisParameters=None):  # noqa: E501
        """HabitatAnalysisRequest - a model defined in Swagger

        :param satellite_data: The satellite_data of this HabitatAnalysisRequest.  # noqa: E501
        :type satellite_data: str
        :param environmental_data: The environmental_data of this HabitatAnalysisRequest.  # noqa: E501
        :type environmental_data: HabitatAnalysisRequestEnvironmentalData
        :param geographic_coordinates: The geographic_coordinates of this HabitatAnalysisRequest.  # noqa: E501
        :type geographic_coordinates: HabitatAnalysisRequestGeographicCoordinates
        :param analysis_parameters: The analysis_parameters of this HabitatAnalysisRequest.  # noqa: E501
        :type analysis_parameters: HabitatAnalysisRequestAnalysisParameters
        """
        self.swagger_types = {
            'satellite_data': str,
            'environmental_data': HabitatAnalysisRequestEnvironmentalData,
            'geographic_coordinates': HabitatAnalysisRequestGeographicCoordinates,
            'analysis_parameters': HabitatAnalysisRequestAnalysisParameters
        }

        self.attribute_map = {
            'satellite_data': 'satellite_data',
            'environmental_data': 'environmental_data',
            'geographic_coordinates': 'geographic_coordinates',
            'analysis_parameters': 'analysis_parameters'
        }
        self._satellite_data = satellite_data
        self._environmental_data = environmental_data
        self._geographic_coordinates = geographic_coordinates
        self._analysis_parameters = analysis_parameters

    @classmethod
    def from_dict(cls, dikt) -> 'HabitatAnalysisRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HabitatAnalysisRequest of this HabitatAnalysisRequest.  # noqa: E501
        :rtype: HabitatAnalysisRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def satellite_data(self) -> str:
        """Gets the satellite_data of this HabitatAnalysisRequest.

        Base64 encoded satellite image  # noqa: E501

        :return: The satellite_data of this HabitatAnalysisRequest.
        :rtype: str
        """
        return self._satellite_data

    @satellite_data.setter
    def satellite_data(self, satellite_data: str):
        """Sets the satellite_data of this HabitatAnalysisRequest.

        Base64 encoded satellite image  # noqa: E501

        :param satellite_data: The satellite_data of this HabitatAnalysisRequest.
        :type satellite_data: str
        """

        self._satellite_data = satellite_data

    @property
    def environmental_data(self) -> HabitatAnalysisRequestEnvironmentalData:
        """Gets the environmental_data of this HabitatAnalysisRequest.


        :return: The environmental_data of this HabitatAnalysisRequest.
        :rtype: HabitatAnalysisRequestEnvironmentalData
        """
        return self._environmental_data

    @environmental_data.setter
    def environmental_data(self, environmental_data: HabitatAnalysisRequestEnvironmentalData):
        """Sets the environmental_data of this HabitatAnalysisRequest.


        :param environmental_data: The environmental_data of this HabitatAnalysisRequest.
        :type environmental_data: HabitatAnalysisRequestEnvironmentalData
        """

        self._environmental_data = environmental_data

    @property
    def geographic_coordinates(self) -> HabitatAnalysisRequestGeographicCoordinates:
        """Gets the geographic_coordinates of this HabitatAnalysisRequest.


        :return: The geographic_coordinates of this HabitatAnalysisRequest.
        :rtype: HabitatAnalysisRequestGeographicCoordinates
        """
        return self._geographic_coordinates

    @geographic_coordinates.setter
    def geographic_coordinates(self, geographic_coordinates: HabitatAnalysisRequestGeographicCoordinates):
        """Sets the geographic_coordinates of this HabitatAnalysisRequest.


        :param geographic_coordinates: The geographic_coordinates of this HabitatAnalysisRequest.
        :type geographic_coordinates: HabitatAnalysisRequestGeographicCoordinates
        """

        self._geographic_coordinates = geographic_coordinates

    @property
    def analysis_parameters(self) -> HabitatAnalysisRequestAnalysisParameters:
        """Gets the analysis_parameters of this HabitatAnalysisRequest.


        :return: The analysis_parameters of this HabitatAnalysisRequest.
        :rtype: HabitatAnalysisRequestAnalysisParameters
        """
        return self._analysis_parameters

    @analysis_parameters.setter
    def analysis_parameters(self, analysis_parameters: HabitatAnalysisRequestAnalysisParameters):
        """Sets the analysis_parameters of this HabitatAnalysisRequest.


        :param analysis_parameters: The analysis_parameters of this HabitatAnalysisRequest.
        :type analysis_parameters: HabitatAnalysisRequestAnalysisParameters
        """

        self._analysis_parameters = analysis_parameters
