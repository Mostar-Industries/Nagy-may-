# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NotificationSubscription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, subscription_id: str=None, status: str=None, created_at: datetime=None, expiration_date: datetime=None):  # noqa: E501
        """NotificationSubscription - a model defined in Swagger

        :param subscription_id: The subscription_id of this NotificationSubscription.  # noqa: E501
        :type subscription_id: str
        :param status: The status of this NotificationSubscription.  # noqa: E501
        :type status: str
        :param created_at: The created_at of this NotificationSubscription.  # noqa: E501
        :type created_at: datetime
        :param expiration_date: The expiration_date of this NotificationSubscription.  # noqa: E501
        :type expiration_date: datetime
        """
        self.swagger_types = {
            'subscription_id': str,
            'status': str,
            'created_at': datetime,
            'expiration_date': datetime
        }

        self.attribute_map = {
            'subscription_id': 'subscription_id',
            'status': 'status',
            'created_at': 'created_at',
            'expiration_date': 'expiration_date'
        }
        self._subscription_id = subscription_id
        self._status = status
        self._created_at = created_at
        self._expiration_date = expiration_date

    @classmethod
    def from_dict(cls, dikt) -> 'NotificationSubscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NotificationSubscription of this NotificationSubscription.  # noqa: E501
        :rtype: NotificationSubscription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscription_id(self) -> str:
        """Gets the subscription_id of this NotificationSubscription.


        :return: The subscription_id of this NotificationSubscription.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id: str):
        """Sets the subscription_id of this NotificationSubscription.


        :param subscription_id: The subscription_id of this NotificationSubscription.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def status(self) -> str:
        """Gets the status of this NotificationSubscription.


        :return: The status of this NotificationSubscription.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this NotificationSubscription.


        :param status: The status of this NotificationSubscription.
        :type status: str
        """
        allowed_values = ["active", "paused", "expired"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this NotificationSubscription.


        :return: The created_at of this NotificationSubscription.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this NotificationSubscription.


        :param created_at: The created_at of this NotificationSubscription.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def expiration_date(self) -> datetime:
        """Gets the expiration_date of this NotificationSubscription.


        :return: The expiration_date of this NotificationSubscription.
        :rtype: datetime
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date: datetime):
        """Sets the expiration_date of this NotificationSubscription.


        :param expiration_date: The expiration_date of this NotificationSubscription.
        :type expiration_date: datetime
        """

        self._expiration_date = expiration_date
