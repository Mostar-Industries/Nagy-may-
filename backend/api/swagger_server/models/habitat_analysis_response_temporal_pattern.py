# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class HabitatAnalysisResponseTemporalPattern(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, frequency: str=None, historical_trend: str=None):  # noqa: E501
        """HabitatAnalysisResponseTemporalPattern - a model defined in Swagger

        :param frequency: The frequency of this HabitatAnalysisResponseTemporalPattern.  # noqa: E501
        :type frequency: str
        :param historical_trend: The historical_trend of this HabitatAnalysisResponseTemporalPattern.  # noqa: E501
        :type historical_trend: str
        """
        self.swagger_types = {
            'frequency': str,
            'historical_trend': str
        }

        self.attribute_map = {
            'frequency': 'frequency',
            'historical_trend': 'historical_trend'
        }
        self._frequency = frequency
        self._historical_trend = historical_trend

    @classmethod
    def from_dict(cls, dikt) -> 'HabitatAnalysisResponseTemporalPattern':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HabitatAnalysisResponse_temporal_pattern of this HabitatAnalysisResponseTemporalPattern.  # noqa: E501
        :rtype: HabitatAnalysisResponseTemporalPattern
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frequency(self) -> str:
        """Gets the frequency of this HabitatAnalysisResponseTemporalPattern.


        :return: The frequency of this HabitatAnalysisResponseTemporalPattern.
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency: str):
        """Sets the frequency of this HabitatAnalysisResponseTemporalPattern.


        :param frequency: The frequency of this HabitatAnalysisResponseTemporalPattern.
        :type frequency: str
        """
        allowed_values = ["daily", "weekly", "monthly"]  # noqa: E501
        if frequency not in allowed_values:
            raise ValueError(
                "Invalid value for `frequency` ({0}), must be one of {1}"
                .format(frequency, allowed_values)
            )

        self._frequency = frequency

    @property
    def historical_trend(self) -> str:
        """Gets the historical_trend of this HabitatAnalysisResponseTemporalPattern.


        :return: The historical_trend of this HabitatAnalysisResponseTemporalPattern.
        :rtype: str
        """
        return self._historical_trend

    @historical_trend.setter
    def historical_trend(self, historical_trend: str):
        """Sets the historical_trend of this HabitatAnalysisResponseTemporalPattern.


        :param historical_trend: The historical_trend of this HabitatAnalysisResponseTemporalPattern.
        :type historical_trend: str
        """
        allowed_values = ["increasing", "stable", "decreasing"]  # noqa: E501
        if historical_trend not in allowed_values:
            raise ValueError(
                "Invalid value for `historical_trend` ({0}), must be one of {1}"
                .format(historical_trend, allowed_values)
            )

        self._historical_trend = historical_trend
