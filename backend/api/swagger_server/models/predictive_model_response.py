# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.predictive_model_response_model_feedback import PredictiveModelResponseModelFeedback  # noqa: F401,E501
from swagger_server.models.predictive_model_response_predictions import PredictiveModelResponsePredictions  # noqa: F401,E501
from swagger_server import util


class PredictiveModelResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, status: str=None, predictions: List[PredictiveModelResponsePredictions]=None, model_feedback: PredictiveModelResponseModelFeedback=None):  # noqa: E501
        """PredictiveModelResponse - a model defined in Swagger

        :param status: The status of this PredictiveModelResponse.  # noqa: E501
        :type status: str
        :param predictions: The predictions of this PredictiveModelResponse.  # noqa: E501
        :type predictions: List[PredictiveModelResponsePredictions]
        :param model_feedback: The model_feedback of this PredictiveModelResponse.  # noqa: E501
        :type model_feedback: PredictiveModelResponseModelFeedback
        """
        self.swagger_types = {
            'status': str,
            'predictions': List[PredictiveModelResponsePredictions],
            'model_feedback': PredictiveModelResponseModelFeedback
        }

        self.attribute_map = {
            'status': 'status',
            'predictions': 'predictions',
            'model_feedback': 'model_feedback'
        }
        self._status = status
        self._predictions = predictions
        self._model_feedback = model_feedback

    @classmethod
    def from_dict(cls, dikt) -> 'PredictiveModelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PredictiveModelResponse of this PredictiveModelResponse.  # noqa: E501
        :rtype: PredictiveModelResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> str:
        """Gets the status of this PredictiveModelResponse.


        :return: The status of this PredictiveModelResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this PredictiveModelResponse.


        :param status: The status of this PredictiveModelResponse.
        :type status: str
        """

        self._status = status

    @property
    def predictions(self) -> List[PredictiveModelResponsePredictions]:
        """Gets the predictions of this PredictiveModelResponse.


        :return: The predictions of this PredictiveModelResponse.
        :rtype: List[PredictiveModelResponsePredictions]
        """
        return self._predictions

    @predictions.setter
    def predictions(self, predictions: List[PredictiveModelResponsePredictions]):
        """Sets the predictions of this PredictiveModelResponse.


        :param predictions: The predictions of this PredictiveModelResponse.
        :type predictions: List[PredictiveModelResponsePredictions]
        """

        self._predictions = predictions

    @property
    def model_feedback(self) -> PredictiveModelResponseModelFeedback:
        """Gets the model_feedback of this PredictiveModelResponse.


        :return: The model_feedback of this PredictiveModelResponse.
        :rtype: PredictiveModelResponseModelFeedback
        """
        return self._model_feedback

    @model_feedback.setter
    def model_feedback(self, model_feedback: PredictiveModelResponseModelFeedback):
        """Sets the model_feedback of this PredictiveModelResponse.


        :param model_feedback: The model_feedback of this PredictiveModelResponse.
        :type model_feedback: PredictiveModelResponseModelFeedback
        """

        self._model_feedback = model_feedback
