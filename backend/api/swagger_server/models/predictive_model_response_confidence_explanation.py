# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.predictive_model_response_confidence_explanation_shap_scores import PredictiveModelResponseConfidenceExplanationShapScores  # noqa: F401,E501
from swagger_server import util


class PredictiveModelResponseConfidenceExplanation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, shap_scores: List[PredictiveModelResponseConfidenceExplanationShapScores]=None, decision_context: str=None):  # noqa: E501
        """PredictiveModelResponseConfidenceExplanation - a model defined in Swagger

        :param shap_scores: The shap_scores of this PredictiveModelResponseConfidenceExplanation.  # noqa: E501
        :type shap_scores: List[PredictiveModelResponseConfidenceExplanationShapScores]
        :param decision_context: The decision_context of this PredictiveModelResponseConfidenceExplanation.  # noqa: E501
        :type decision_context: str
        """
        self.swagger_types = {
            'shap_scores': List[PredictiveModelResponseConfidenceExplanationShapScores],
            'decision_context': str
        }

        self.attribute_map = {
            'shap_scores': 'shap_scores',
            'decision_context': 'decision_context'
        }
        self._shap_scores = shap_scores
        self._decision_context = decision_context

    @classmethod
    def from_dict(cls, dikt) -> 'PredictiveModelResponseConfidenceExplanation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PredictiveModelResponse_confidence_explanation of this PredictiveModelResponseConfidenceExplanation.  # noqa: E501
        :rtype: PredictiveModelResponseConfidenceExplanation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shap_scores(self) -> List[PredictiveModelResponseConfidenceExplanationShapScores]:
        """Gets the shap_scores of this PredictiveModelResponseConfidenceExplanation.


        :return: The shap_scores of this PredictiveModelResponseConfidenceExplanation.
        :rtype: List[PredictiveModelResponseConfidenceExplanationShapScores]
        """
        return self._shap_scores

    @shap_scores.setter
    def shap_scores(self, shap_scores: List[PredictiveModelResponseConfidenceExplanationShapScores]):
        """Sets the shap_scores of this PredictiveModelResponseConfidenceExplanation.


        :param shap_scores: The shap_scores of this PredictiveModelResponseConfidenceExplanation.
        :type shap_scores: List[PredictiveModelResponseConfidenceExplanationShapScores]
        """

        self._shap_scores = shap_scores

    @property
    def decision_context(self) -> str:
        """Gets the decision_context of this PredictiveModelResponseConfidenceExplanation.

        Plaintext summary (e.g., \"high vegetation & moderate rainfall drove high suitability\")  # noqa: E501

        :return: The decision_context of this PredictiveModelResponseConfidenceExplanation.
        :rtype: str
        """
        return self._decision_context

    @decision_context.setter
    def decision_context(self, decision_context: str):
        """Sets the decision_context of this PredictiveModelResponseConfidenceExplanation.

        Plaintext summary (e.g., \"high vegetation & moderate rainfall drove high suitability\")  # noqa: E501

        :param decision_context: The decision_context of this PredictiveModelResponseConfidenceExplanation.
        :type decision_context: str
        """

        self._decision_context = decision_context
