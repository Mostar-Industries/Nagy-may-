# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DataManagementTransformRequestParameters(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, scaling: str=None):  # noqa: E501
        """DataManagementTransformRequestParameters - a model defined in Swagger

        :param scaling: The scaling of this DataManagementTransformRequestParameters.  # noqa: E501
        :type scaling: str
        """
        self.swagger_types = {
            'scaling': str
        }

        self.attribute_map = {
            'scaling': 'scaling'
        }
        self._scaling = scaling

    @classmethod
    def from_dict(cls, dikt) -> 'DataManagementTransformRequestParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataManagementTransformRequest_parameters of this DataManagementTransformRequestParameters.  # noqa: E501
        :rtype: DataManagementTransformRequestParameters
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scaling(self) -> str:
        """Gets the scaling of this DataManagementTransformRequestParameters.

        Scaling method to apply (e.g., min-max, standard).  # noqa: E501

        :return: The scaling of this DataManagementTransformRequestParameters.
        :rtype: str
        """
        return self._scaling

    @scaling.setter
    def scaling(self, scaling: str):
        """Sets the scaling of this DataManagementTransformRequestParameters.

        Scaling method to apply (e.g., min-max, standard).  # noqa: E501

        :param scaling: The scaling of this DataManagementTransformRequestParameters.
        :type scaling: str
        """

        self._scaling = scaling
