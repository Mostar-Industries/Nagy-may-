# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RAGQueryResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, answer: str=None, sources: List[str]=None):  # noqa: E501
        """RAGQueryResponse - a model defined in Swagger

        :param answer: The answer of this RAGQueryResponse.  # noqa: E501
        :type answer: str
        :param sources: The sources of this RAGQueryResponse.  # noqa: E501
        :type sources: List[str]
        """
        self.swagger_types = {
            'answer': str,
            'sources': List[str]
        }

        self.attribute_map = {
            'answer': 'answer',
            'sources': 'sources'
        }
        self._answer = answer
        self._sources = sources

    @classmethod
    def from_dict(cls, dikt) -> 'RAGQueryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RAGQueryResponse of this RAGQueryResponse.  # noqa: E501
        :rtype: RAGQueryResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self) -> str:
        """Gets the answer of this RAGQueryResponse.

        The AI-generated answer to the user query.  # noqa: E501

        :return: The answer of this RAGQueryResponse.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer: str):
        """Sets the answer of this RAGQueryResponse.

        The AI-generated answer to the user query.  # noqa: E501

        :param answer: The answer of this RAGQueryResponse.
        :type answer: str
        """

        self._answer = answer

    @property
    def sources(self) -> List[str]:
        """Gets the sources of this RAGQueryResponse.

        References or URLs used for answering the query.  # noqa: E501

        :return: The sources of this RAGQueryResponse.
        :rtype: List[str]
        """
        return self._sources

    @sources.setter
    def sources(self, sources: List[str]):
        """Sets the sources of this RAGQueryResponse.

        References or URLs used for answering the query.  # noqa: E501

        :param sources: The sources of this RAGQueryResponse.
        :type sources: List[str]
        """

        self._sources = sources
