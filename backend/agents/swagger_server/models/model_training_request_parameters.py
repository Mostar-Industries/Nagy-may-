# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ModelTrainingRequestParameters(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, learning_rate: float=None, epochs: int=None):  # noqa: E501
        """ModelTrainingRequestParameters - a model defined in Swagger

        :param learning_rate: The learning_rate of this ModelTrainingRequestParameters.  # noqa: E501
        :type learning_rate: float
        :param epochs: The epochs of this ModelTrainingRequestParameters.  # noqa: E501
        :type epochs: int
        """
        self.swagger_types = {
            'learning_rate': float,
            'epochs': int
        }

        self.attribute_map = {
            'learning_rate': 'learning_rate',
            'epochs': 'epochs'
        }
        self._learning_rate = learning_rate
        self._epochs = epochs

    @classmethod
    def from_dict(cls, dikt) -> 'ModelTrainingRequestParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelTrainingRequest_parameters of this ModelTrainingRequestParameters.  # noqa: E501
        :rtype: ModelTrainingRequestParameters
        """
        return util.deserialize_model(dikt, cls)

    @property
    def learning_rate(self) -> float:
        """Gets the learning_rate of this ModelTrainingRequestParameters.

        Learning rate for the optimization algorithm.  # noqa: E501

        :return: The learning_rate of this ModelTrainingRequestParameters.
        :rtype: float
        """
        return self._learning_rate

    @learning_rate.setter
    def learning_rate(self, learning_rate: float):
        """Sets the learning_rate of this ModelTrainingRequestParameters.

        Learning rate for the optimization algorithm.  # noqa: E501

        :param learning_rate: The learning_rate of this ModelTrainingRequestParameters.
        :type learning_rate: float
        """

        self._learning_rate = learning_rate

    @property
    def epochs(self) -> int:
        """Gets the epochs of this ModelTrainingRequestParameters.

        Number of training epochs.  # noqa: E501

        :return: The epochs of this ModelTrainingRequestParameters.
        :rtype: int
        """
        return self._epochs

    @epochs.setter
    def epochs(self, epochs: int):
        """Sets the epochs of this ModelTrainingRequestParameters.

        Number of training epochs.  # noqa: E501

        :param epochs: The epochs of this ModelTrainingRequestParameters.
        :type epochs: int
        """

        self._epochs = epochs
