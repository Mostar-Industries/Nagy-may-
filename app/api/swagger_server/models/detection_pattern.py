# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict, Any  # Updated to include Any

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DetectionPattern(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, image_url: object=None):  # noqa: E501
        """DetectionPattern - a model defined in Swagger

        :param image_url: The image_url of this DetectionPattern.  # noqa: E501
        :type image_url: object
        """
        self.swagger_types = {
            'image_url': object
        }

        self.attribute_map = {
            'image_url': 'image_url'
        }
        self._image_url = image_url

    @classmethod
    def from_dict(cls, dikt) -> 'DetectionPattern':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DetectionPattern of this DetectionPattern.  # noqa: E501
        :rtype: DetectionPattern
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_url(self) -> object:
        """Gets the image_url of this DetectionPattern.

        URL of the image to analyze.  # noqa: E501

        :return: The image_url of this DetectionPattern.
        :rtype: object
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url: object):
        """Sets the image_url of this DetectionPattern.

        URL of the image to analyze.  # noqa: E501

        :param image_url: The image_url of this DetectionPattern.
        :type image_url: object
        """
        self._image_url = image_url

    def to_dict(self) -> Dict[str, Any]:
        """Converts the model instance to a dictionary.

        :return: A dictionary representation of the model.
        :rtype: Dict[str, Any]
        """
        return {
            'image_url': self._image_url
        }
