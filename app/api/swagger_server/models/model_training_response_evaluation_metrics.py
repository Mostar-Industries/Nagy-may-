# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ModelTrainingResponseEvaluationMetrics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, accuracy: object=None, precision: object=None, recall: object=None, f1_score: object=None):  # noqa: E501
        """ModelTrainingResponseEvaluationMetrics - a model defined in Swagger

        :param accuracy: The accuracy of this ModelTrainingResponseEvaluationMetrics.  # noqa: E501
        :type accuracy: object
        :param precision: The precision of this ModelTrainingResponseEvaluationMetrics.  # noqa: E501
        :type precision: object
        :param recall: The recall of this ModelTrainingResponseEvaluationMetrics.  # noqa: E501
        :type recall: object
        :param f1_score: The f1_score of this ModelTrainingResponseEvaluationMetrics.  # noqa: E501
        :type f1_score: object
        """
        self.swagger_types = {
            'accuracy': object,
            'precision': object,
            'recall': object,
            'f1_score': object
        }

        self.attribute_map = {
            'accuracy': 'accuracy',
            'precision': 'precision',
            'recall': 'recall',
            'f1_score': 'f1_score'
        }
        self._accuracy = accuracy
        self._precision = precision
        self._recall = recall
        self._f1_score = f1_score

    @classmethod
    def from_dict(cls, dikt) -> 'ModelTrainingResponseEvaluationMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelTrainingResponse_evaluation_metrics of this ModelTrainingResponseEvaluationMetrics.  # noqa: E501
        :rtype: ModelTrainingResponseEvaluationMetrics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accuracy(self) -> object:
        """Gets the accuracy of this ModelTrainingResponseEvaluationMetrics.

        Accuracy of the trained model.  # noqa: E501

        :return: The accuracy of this ModelTrainingResponseEvaluationMetrics.
        :rtype: object
        """
        return self._accuracy

    @accuracy.setter
    def accuracy(self, accuracy: object):
        """Sets the accuracy of this ModelTrainingResponseEvaluationMetrics.

        Accuracy of the trained model.  # noqa: E501

        :param accuracy: The accuracy of this ModelTrainingResponseEvaluationMetrics.
        :type accuracy: object
        """

        self._accuracy = accuracy

    @property
    def precision(self) -> object:
        """Gets the precision of this ModelTrainingResponseEvaluationMetrics.

        Precision score of the trained model.  # noqa: E501

        :return: The precision of this ModelTrainingResponseEvaluationMetrics.
        :rtype: object
        """
        return self._precision

    @precision.setter
    def precision(self, precision: object):
        """Sets the precision of this ModelTrainingResponseEvaluationMetrics.

        Precision score of the trained model.  # noqa: E501

        :param precision: The precision of this ModelTrainingResponseEvaluationMetrics.
        :type precision: object
        """

        self._precision = precision

    @property
    def recall(self) -> object:
        """Gets the recall of this ModelTrainingResponseEvaluationMetrics.

        Recall score of the trained model.  # noqa: E501

        :return: The recall of this ModelTrainingResponseEvaluationMetrics.
        :rtype: object
        """
        return self._recall

    @recall.setter
    def recall(self, recall: object):
        """Sets the recall of this ModelTrainingResponseEvaluationMetrics.

        Recall score of the trained model.  # noqa: E501

        :param recall: The recall of this ModelTrainingResponseEvaluationMetrics.
        :type recall: object
        """

        self._recall = recall

    @property
    def f1_score(self) -> object:
        """Gets the f1_score of this ModelTrainingResponseEvaluationMetrics.

        F1 score of the trained model.  # noqa: E501

        :return: The f1_score of this ModelTrainingResponseEvaluationMetrics.
        :rtype: object
        """
        return self._f1_score

    @f1_score.setter
    def f1_score(self, f1_score: object):
        """Sets the f1_score of this ModelTrainingResponseEvaluationMetrics.

        F1 score of the trained model.  # noqa: E501

        :param f1_score: The f1_score of this ModelTrainingResponseEvaluationMetrics.
        :type f1_score: object
        """

        self._f1_score = f1_score
