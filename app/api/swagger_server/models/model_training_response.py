# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.model_training_response_evaluation_metrics import ModelTrainingResponseEvaluationMetrics  # noqa: F401,E501
from swagger_server import util


class ModelTrainingResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, status: object=None, evaluation_metrics: ModelTrainingResponseEvaluationMetrics=None):  # noqa: E501
        """ModelTrainingResponse - a model defined in Swagger

        :param status: The status of this ModelTrainingResponse.  # noqa: E501
        :type status: object
        :param evaluation_metrics: The evaluation_metrics of this ModelTrainingResponse.  # noqa: E501
        :type evaluation_metrics: ModelTrainingResponseEvaluationMetrics
        """
        self.swagger_types = {
            'status': object,
            'evaluation_metrics': ModelTrainingResponseEvaluationMetrics
        }

        self.attribute_map = {
            'status': 'status',
            'evaluation_metrics': 'evaluation_metrics'
        }
        self._status = status
        self._evaluation_metrics = evaluation_metrics

    @classmethod
    def from_dict(cls, dikt) -> 'ModelTrainingResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelTrainingResponse of this ModelTrainingResponse.  # noqa: E501
        :rtype: ModelTrainingResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> object:
        """Gets the status of this ModelTrainingResponse.

        Status of the training process (e.g., \"Training complete\").  # noqa: E501

        :return: The status of this ModelTrainingResponse.
        :rtype: object
        """
        return self._status

    @status.setter
    def status(self, status: object):
        """Sets the status of this ModelTrainingResponse.

        Status of the training process (e.g., \"Training complete\").  # noqa: E501

        :param status: The status of this ModelTrainingResponse.
        :type status: object
        """

        self._status = status

    @property
    def evaluation_metrics(self) -> ModelTrainingResponseEvaluationMetrics:
        """Gets the evaluation_metrics of this ModelTrainingResponse.


        :return: The evaluation_metrics of this ModelTrainingResponse.
        :rtype: ModelTrainingResponseEvaluationMetrics
        """
        return self._evaluation_metrics

    @evaluation_metrics.setter
    def evaluation_metrics(self, evaluation_metrics: ModelTrainingResponseEvaluationMetrics):
        """Sets the evaluation_metrics of this ModelTrainingResponse.


        :param evaluation_metrics: The evaluation_metrics of this ModelTrainingResponse.
        :type evaluation_metrics: ModelTrainingResponseEvaluationMetrics
        """

        self._evaluation_metrics = evaluation_metrics
