# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict, Any  # Updated to include Any

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DataManagementOpenRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, dataset_url: Any=None):  # Updated to use Any
        """DataManagementOpenRequest - a model defined in Swagger

        :param dataset_url: The dataset_url of this DataManagementOpenRequest.  # noqa: E501
        :type dataset_url: Any
        """
        self.swagger_types = {
            'dataset_url': Any
        }

        self.attribute_map = {
            'dataset_url': 'dataset_url'
        }
        self._dataset_url = dataset_url

    @classmethod
    def from_dict(cls, dikt) -> 'DataManagementOpenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataManagementOpenRequest of this DataManagementOpenRequest.  # noqa: E501
        :rtype: DataManagementOpenRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_url(self) -> Any:
        """Gets the dataset_url of this DataManagementOpenRequest.

        URL to the dataset to open (e.g., a CSV or GeoJSON file).  # noqa: E501

        :return: The dataset_url of this DataManagementOpenRequest.
        :rtype: Any
        """
        return self._dataset_url

    @dataset_url.setter
    def dataset_url(self, dataset_url: Any):
        """Sets the dataset_url of this DataManagementOpenRequest.

        URL to the dataset to open (e.g., a CSV or GeoJSON file).  # noqa: E501

        :param dataset_url: The dataset_url of this DataManagementOpenRequest.
        :type dataset_url: Any
        """
        self._dataset_url = dataset_url

    def to_dict(self) -> Dict[str, Any]:
        """Converts the model instance to a dictionary.

        :return: A dictionary representation of the model.
        :rtype: Dict[str, Any]
        """
        return {
            'dataset_url': self._dataset_url
        }
