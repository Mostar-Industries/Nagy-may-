# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class HabitatPrediction(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, habitat_score: object=None, risk_factors: object=None):  # noqa: E501
        """HabitatPrediction - a model defined in Swagger

        :param habitat_score: The habitat_score of this HabitatPrediction.  # noqa: E501
        :type habitat_score: object
        :param risk_factors: The risk_factors of this HabitatPrediction.  # noqa: E501
        :type risk_factors: object
        """
        self.swagger_types = {
            'habitat_score': object,
            'risk_factors': object
        }

        self.attribute_map = {
            'habitat_score': 'habitat_score',
            'risk_factors': 'risk_factors'
        }
        self._habitat_score = habitat_score
        self._risk_factors = risk_factors

    @classmethod
    def from_dict(cls, dikt) -> 'HabitatPrediction':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HabitatPrediction of this HabitatPrediction.  # noqa: E501
        :rtype: HabitatPrediction
        """
        return util.deserialize_model(dikt, cls)

    @property
    def habitat_score(self) -> object:
        """Gets the habitat_score of this HabitatPrediction.

        Suitability score for the region (0-1).  # noqa: E501

        :return: The habitat_score of this HabitatPrediction.
        :rtype: object
        """
        return self._habitat_score

    @habitat_score.setter
    def habitat_score(self, habitat_score: object):
        """Sets the habitat_score of this HabitatPrediction.

        Suitability score for the region (0-1).  # noqa: E501

        :param habitat_score: The habitat_score of this HabitatPrediction.
        :type habitat_score: object
        """

        self._habitat_score = habitat_score

    @property
    def risk_factors(self) -> object:
        """Gets the risk_factors of this HabitatPrediction.

        Key ecological risks identified in the habitat.  # noqa: E501

        :return: The risk_factors of this HabitatPrediction.
        :rtype: object
        """
        return self._risk_factors

    @risk_factors.setter
    def risk_factors(self, risk_factors: object):
        """Sets the risk_factors of this HabitatPrediction.

        Key ecological risks identified in the habitat.  # noqa: E501

        :param risk_factors: The risk_factors of this HabitatPrediction.
        :type risk_factors: object
        """

        self._risk_factors = risk_factors
